# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Auth-service deployer

on:
  push:
    branches: ["auth-prod"]

jobs:
  deploy:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: auth-service/package-lock.json
          # working-directory: '/home/ubuntu/actions-runner/_work/Planify-Backend/Planify-Backend/auth-service/'
      - name: create env file
        run: |
          touch .env
          echo DATABASE_URI = ${{ secrets.DATABASE_URI }} >> .env
          echo JWT_SECRET = ${{ secrets.JWT_SECRET }} >> .env
          echo VERIFY_EMAIL = ${{ secrets.VERIFY_EMAIL }} >> .env
          echo VERIFY_PASSWORD = ${{ secrets.VERIFY_PASSWORD }} >> .env
          echo SALT_ROUND = ${{ secrets.SALT_ROUND }} >> .env
          echo PORT = ${{ secrets.PORT }} >> .env
          echo AWS_ACCESS_KEY = ${{ secrets.AWS_ACCESS_KEY }} >> .env
          echo AWS_SECRET_KEY = ${{ secrets.AWS_SECRET_KEY }} >> .env
          echo AWS_S3_BUCKET_NAME = ${{ secrets.AWS_S3_BUCKET_NAME }} >> .env
          mv .env ./auth-service/

      - run: |
          cd auth-service
          npm i
          npm run start:prod
